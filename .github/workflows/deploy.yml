name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest -f Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      - name: Build and push backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest -f backend/Dockerfile backend
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Decode GCP Service Account Key
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | base64 --decode > /tmp/gcp-sa-key.json

      - name: Authenticate with Google Cloud
        run: |
          gcloud auth activate-service-account --key-file=/tmp/gcp-sa-key.json
          gcloud config set project ${{ secrets.GOOGLE_PROJECT_ID }}
        env:
          GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}

      - name: Install Google Cloud SDK
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo apt-get install -y apt-transport-https ca-certificates gnupg
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update && sudo apt-get install -y google-cloud-sdk

      - name: Install gke-gcloud-auth-plugin
        run: |
          sudo apt-get update && sudo apt-get install -y google-cloud-cli-gke-gcloud-auth-plugin

      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials autopilot-cluster-1 --zone us-central1 --project ${{ secrets.GOOGLE_PROJECT_ID }}

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/mongo-deployment.yaml
